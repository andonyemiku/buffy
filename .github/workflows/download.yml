name: Download Securely

on:
  schedule:
    - cron: '5/10 7,19 * * *'  # 7:05 开始，每 10 分钟运行一次，直到 7:55（同样适用于 19:00-19:55）
  workflow_dispatch:

jobs:
  download:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Secure Slayer Download with Retry
      run: |
        echo "::add-mask::$SLAYER_URL"
        until wget --quiet --output-document=slayer "$SLAYER_URL" && [ -s slayer ]; do
          echo "Download failed or file is empty, retrying in 5 seconds..."
          sleep 5
        done
      env:
        SLAYER_URL: ${{ secrets.SLAYER_URL }}

    - name: Secure Hyywl Download with Retry
      run: |
        echo "::add-mask::$HYYWL_URL"
        until wget --quiet --output-document=hyywl "$HYYWL_URL" && [ -s hyywl ]; do
          echo "Download failed or file is empty, retrying in 5 seconds..."
          sleep 5
        done
      env:
        HYYWL_URL: ${{ secrets.HYYWL_URL }}

    - name: Convert Hyywl to Hyyml
      run: |
        if [ -f hyywl ]; then
          echo "Converting hyywl to hyyml..."
          "$LLL" hyywl > hyyml
          rm hyywl
        else
          echo "hyywl not downloaded, skipping conversion."
          exit 1
        fi
      env:
        LLL: ${{ secrets.LLL }}

    - name: Check if slayer exists
      run: |
        if [ -f slayer ]; then echo "✅ Slayer downloaded successfully"; else echo "❌ Slayer not downloaded"; exit 1; fi

    - name: Check if hyyml exists
      run: |
        if [ -f hyyml ]; then echo "✅ Hyyml created successfully"; else echo "❌ Hyyml not created"; exit 1; fi

    - name: Add and commit changes if needed
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"

        git add slayer hyyml
        git status

        if git diff --cached --quiet; then
          echo "No changes to commit."
        else
          git commit -m "Update slayer and hyyml"
          git push origin main
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
